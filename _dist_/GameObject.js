import{Sprite as l,Texture as x}from"../_snowpack/pkg/pixijs.js";import{Vector as h}from"./Vector.js";const e=class extends l{constructor(i){super(i!=null?i:x.from("assets/ohno.png"));this.vel=new h(0,0),this.friction=.5,this.type="gameobject"}static isGameObject(i){return i.type==="gameobject"}update(i){this.x+=this.vel.x*i,this.y+=this.vel.y*i}clampSpeed(){Math.abs(this.vel.x)<.1&&(this.vel.x=0),Math.abs(this.vel.y)<.1&&(this.vel.y=0),this.vel.x>e.maxSpeed&&(this.vel.x=16),this.vel.x<-e.maxSpeed&&(this.vel.x=-16),this.vel.y>e.maxSpeed&&(this.vel.y=16),this.vel.y<-e.maxSpeed&&(this.vel.y=-16)}collide(...i){i.forEach(s=>{if(s!=this&&this.checkCollision(s)){const t=this.differenceVector(s);Math.abs(t.x)<Math.abs(t.y)?this.vel.x+=t.x:(this.vel.y+=t.y,console.log(t.y))}})}checkCollision(i){const s=this.x+this.vel.x,t=this.y+this.vel.y;return s<i.x+i.width&&s+this.width>i.x&&t<i.y+i.height&&t+this.height>i.y}differenceVector(i){const s=new h(0,0);return this.x<i.x?s.x=i.x-(this.x+this.width+this.vel.x):this.x>i.x&&(s.x=i.x+i.width-(this.x+this.vel.x)),this.y<i.y?s.y=i.y-(this.y+this.height+this.vel.y):this.y>i.y&&(s.y=i.y+i.height-(this.y+this.vel.y)),console.log(s),s}setSize(i,s){return this.width=i,this.height=s,this}setPosition(i,s){return this.x=i,this.y=s,this}};export let GameObject=e;GameObject.maxSpeed=16;
